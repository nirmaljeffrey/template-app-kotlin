
plugins {
//    id 'org.jetbrains.kotlin.jvm' version '1.7.21'
    id 'org.jetbrains.kotlin.jvm' version '1.7.22'
    id 'io.qameta.allure' version '2.11.2'
}

jar {
    // Exclude specific files or directories
    exclude 'src/main/resources/apps/'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation("io.appium:java-client:8.5.0")
    implementation("io.github.microutils:kotlin-logging-jvm:2.0.11")
    implementation("org.seleniumhq.selenium:selenium-support:4.9.1")
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.2.2")
    implementation("com.google.code.gson:gson:2.8.9")
    implementation("io.rest-assured:rest-assured:5.3.0")
    implementation("org.testng:testng:7.7.1")
    implementation("io.qameta.allure:allure-testng:2.11.2")
    implementation("io.qameta.allure:allure-java-commons:2.11.2")
    testImplementation("org.slf4j:slf4j-nop:2.0.9")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0")
    implementation("com.squareup.okhttp3:okhttp:4.9.1")
    implementation("org.skyscreamer:jsonassert:1.5.1")
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceSets {
    test {
        kotlin.srcDirs("src/test/kotlin") // Set the test source directory to 'src/test/kotlin'
    }
}

test {
    dependsOn 'cleanTest'
    useTestNG() {
        systemProperty("testDevice", System.getProperty("env"))
        systemProperty("login", System.getProperty("login"))
        systemProperty("appVersion", System.getProperty("appVersion"))
        systemProperty("ticketnumber", System.getProperty("ticketnumber"))
    }
    testLogging {
        // Configure logging level for standard output
        events 'standardOut'
        // Configure logging level for standard error
        events 'standardError'
    }
}

allureReport {
    enabled = true
}

clean {
    delete rootProject.buildDir
}
